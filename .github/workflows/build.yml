name: Build O3DE Rider Plugin

on:
  push:
    branches: [ main, develop ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  release:
    types: [ published ]
  workflow_dispatch:

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        java-version: [17, 21]
        gradle-version: [8.4]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
      
    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
        
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-version: ${{ matrix.gradle-version }}
        
    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@v1
      
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Create Detekt config
      run: ./gradlew createDetektConfig
      
    - name: Run tests
      run: ./gradlew test --continue
      
    - name: Build plugin
      run: ./gradlew buildPlugin
      
    - name: Verify plugin
      run: ./gradlew verifyPlugin
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: plugin-artifacts-java-${{ matrix.java-version }}
        path: build/distributions/*.zip
        retention-days: 30
        
    - name: Upload test reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-reports-java-${{ matrix.java-version }}
        path: |
          build/reports/tests/
          build/test-results/
        retention-days: 30

  # 代码质量检查
  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-version: 8.4
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Create Detekt config
      run: ./gradlew createDetektConfig
      
    - name: Run Detekt
      run: ./gradlew detekt --continue
      
    - name: Upload Detekt reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: detekt-reports
        path: build/reports/detekt/
        retention-days: 30
        
    - name: Annotate PR with Detekt findings
      uses: github/super-linter/slim@v4
      if: github.event_name == 'pull_request'
      env:
        DEFAULT_BRANCH: main
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        VALIDATE_KOTLIN_DETEKT: true
        KOTLIN_DETEKT_CONFIG_FILE: config/detekt/detekt.yml

  # 兼容性测试（多个IntelliJ版本）
  compatibility-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        idea-version: ['2023.1.5', '2023.2.5', '2023.3.4', '2024.1.1']
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-version: 8.4
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Test plugin compatibility with IDEA ${{ matrix.idea-version }}
      run: ./gradlew verifyPlugin -PideaVersion=${{ matrix.idea-version }}
      
    - name: Upload compatibility test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: compatibility-test-${{ matrix.idea-version }}
        path: build/reports/
        retention-days: 7
        
  # 安全扫描
  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  # 发布到GitHub Releases
  release:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    needs: [build, code-quality, compatibility-test, security-scan]
    
    permissions:
      contents: write
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-version: 8.4
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Get plugin version
      id: version
      run: |
        VERSION=$(./gradlew properties -q | grep "version:" | awk '{print $2}')
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
    - name: Build and sign plugin
      env:
        CERTIFICATE_CHAIN: ${{ secrets.CERTIFICATE_CHAIN }}
        PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        PRIVATE_KEY_PASSWORD: ${{ secrets.PRIVATE_KEY_PASSWORD }}
      run: |
        ./gradlew buildPlugin
        if [ -n "$CERTIFICATE_CHAIN" ] && [ -n "$PRIVATE_KEY" ]; then
          ./gradlew signPlugin
        fi
        
    - name: Publish to JetBrains Marketplace
      env:
        PUBLISH_TOKEN: ${{ secrets.PUBLISH_TOKEN }}
      run: |
        if [ -n "$PUBLISH_TOKEN" ]; then
          ./gradlew publishPlugin
        else
          echo "PUBLISH_TOKEN not set, skipping marketplace publication"
        fi
        
    - name: Upload release artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-artifacts
        path: |
          build/distributions/*.zip
          build/libs/*.jar
        retention-days: 90
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          build/distributions/*.zip
        body: |
          ## O3DE Rider Plugin v${{ steps.version.outputs.version }}
          
          ### Changes
          See the [changelog](CHANGELOG.md) for detailed changes.
          
          ### Installation
          1. Download the plugin zip file
          2. In JetBrains Rider, go to File → Settings → Plugins
          3. Click the gear icon and select "Install Plugin from Disk"
          4. Select the downloaded zip file
          
          ### Requirements
          - JetBrains Rider 2023.1 or later
          - O3DE Engine installed and configured
        draft: false
        prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}